{"version":3,"sources":["components/logotodo.png","components/navbar.js","todos.js","addtodo.js","components/todolist.js","coloring/supeer.js","components/about.js","components/contact.js","components/updates.js","components/post.js","App.js","serviceWorker.js","reducer/rootreducer.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","href","react_router_dom","to","Todos","_ref","todos","deleteTodo","todoList","length","map","todo","key","id","onClick","content","addTodo","state","handleChange","e","_this","setState","target","value","handleSubmit","preventDefault","props","AddTodo","onSubmit","this","type","onChange","Component","Todolist","filter","console","log","Math","random","concat","Object","toConsumableArray","src_todos","addtodo","Coloring","WrappedComponent","colour","Updates","posts","postsList","post","src","PostIm","alt","title","body","connect","Post","ownProps","match","params","post_id","find","App","navbar","react_router","path","exact","component","Home","About","Contact","Boolean","window","location","hostname","initState","rootRedducer","arguments","undefined","store","createStore","rootReducer","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7c8ea72c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotodo.af874f15.png\";","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"nav-warpper red darken+5\">\r\n            <div className=\"container\">\r\n                <a href=\"./\" className=\"brand-logo \">todo list</a> \r\n                <ul className =\"right\">\r\n                    {/*using link or Navlink instead of a tag prevent the default refresh as asking server*/}\r\n                    <li><NavLink  to=\"./\">Todolist         </NavLink> </li>\r\n                    <li><NavLink  to=\"./about.js\">About    </NavLink> </li>\r\n                    <li><NavLink  to=\"./contact.js\">Contact</NavLink> </li>\r\n                    <li><NavLink  to=\"./updates.js\">Updates</NavLink> </li>\r\n                </ul> \r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Todos = ({todos,deleteTodo}) => {\r\n    const todoList = todos.length ? (\r\n        todos.map(todo=>{\r\n        return (\r\n            <div className=\"collection-item\" key ={todo.id}>\r\n                <span onClick={()=>{deleteTodo(todo.id)}}>{todo.content}</span>\r\n            </div>\r\n        )\r\n    }\r\n    )\r\n    ) : (\r\n        <p className=\"center\">you have no todo's left</p>\r\n    );\r\n    return (\r\n        <div className=\"todos collection\">\r\n            {todoList}\r\n        </div>\r\n    )\r\n}\r\nexport default Todos;","import React , {Component} from 'react';\r\n\r\nclass addTodo extends Component{\r\nstate ={\r\n    content :''\r\n}\r\nhandleChange = (e) =>{\r\n    this.setState({\r\n        content:e.target.value \r\n    })\r\n}\r\nhandleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    this.props.AddTodo(this.state);\r\n    this.setState({\r\n        content:''\r\n    })\r\n}\r\n    render(){\r\n        return(\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label ></label>\r\n                    <input type=\"text\" onChange={this.handleChange}value={this.state.content}/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default addTodo;","import React , {Component} from 'react';\r\nimport Todos from '../todos.js';\r\nimport AddTodo from '../addtodo.js';\r\n\r\n\r\nclass Todolist extends Component{\r\n  state ={\r\n    todos:[\r\n      {id:1 ,content:'finish the course'}\r\n      ,\r\n      {id:2 ,content:'play a game'}\r\n    ]\r\n  }\r\n  deleteTodo=(id)=>{\r\n   let todos =this.state.todos.filter(todo =>{\r\n     //this condition returns true when the codition happens\r\n     return todo.id !== id ;\r\n   })\r\n   //here we set the runtime state to to the updated after delete\r\n   this.setState({\r\n     todos:todos\r\n   })\r\n    console.log(id);\r\n  }\r\n  \r\n  AddTodo = (todo) => {\r\n    todo.id = Math.random();\r\n    let todos = [...this.state.todos,todo];\r\n    this.setState({\r\n      todos:todos\r\n    })\r\n    console.log(this.state);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n\r\n        <div className=\"todo-app container\">\r\n      \r\n          <h1 className=\"center blue-text\">Todo's</h1>\r\n          <Todos todos={this.state.todos} deleteTodo={this.deleteTodo}/>\r\n          <AddTodo AddTodo={this.AddTodo}/>\r\n        </div>\r\n\r\n    );\r\n  }\r\n}\r\nexport default Todolist;\r\n","//example for higher order component \r\nimport React from 'react';\r\n//wrapped here as whatever exported commponent\r\nconst Coloring = (WrappedComponent)=>{\r\n    //we may make it as array =[] \r\n    const colour = 'green'\r\n    //we can add a const with Math.random \r\n    //and make it as arrayname[nath . floor(mathRandom *num of elemnts in the array)] this one will take a int only with max\r\n    \r\n    \r\n    const className = colour+'-text';\r\n\r\n    return (props)=>{\r\n        return(\r\n            <div className={className}>\r\n                {/*here we pass the props that we got in the call after being colored! */}\r\n                <WrappedComponent {...props}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Coloring;","import React from 'react'\r\nimport Coloring from '../coloring/supeer';\r\nconst About =() => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">about</h4>\r\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ratione rerum, vel in sunt itaque eius reprehenderit minima eveniet officiis non maxime labore veritatis a corrupti dicta iusto, sit temporibus.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coloring(About);","import React from 'react'\r\nimport Coloring from '../coloring/supeer';\r\n\r\nconst Contact =() => {\r\n    return (\r\n        <div className=\"container\">\r\n            <h4 className=\"center\">contact</h4>\r\n            <p>Lorem ipsum dolor sit amet consectetur, adipisicing elit. Eligendi ratione rerum, vel in sunt itaque eius reprehenderit minima eveniet officiis non maxime labore veritatis a corrupti dicta iusto, sit temporibus.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Coloring(Contact);","import React , {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PostIm from './logotodo.png';\r\nclass Updates extends Component{\r\n    \r\n    render(){\r\n        \r\n        const {posts}=this.props;\r\n        const postsList=posts.length ? (\r\n            posts.map(post=>{\r\n                return (\r\n                    <div className=\"post card \" key={post.id}>\r\n                        <img src= {PostIm}  alt=\"her a photoa\"/>\r\n                        <div className=\"card-content\">\r\n                            <Link to={\"/\"+post.id}>\r\n                            <span className=\"card-title orange-text\" >\r\n                                {post.title}\r\n                            </span>\r\n                            </Link>\r\n                            <p className=\"red-text\">{post.body}</p>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })\r\n        ):(\r\n            <div className=\"center\">No posts yet</div>\r\n        )\r\n        return(\r\n            <div className=\"container home\">\r\n                <h4 className=\"center\">Updates</h4>\r\n                {postsList}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        posts: state.posts\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Updates) ;","import React , {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport Coloring from '../coloring/supeer';\r\nclass Post extends Component {\r\n   \r\n    render(){\r\n        console.log(this.props)\r\n        const post =this.props.post ? (\r\n            <div className=\"post\">\r\n                <h4 className=\"center\">{this.props.post.title}</h4>\r\n                <p>{this.props.post.body}</p>\r\n            </div>\r\n        ):(\r\n            <div className=\"center\">Loading post...</div>\r\n        )\r\n        return(\r\n            <div className=\"container\">\r\n               {post}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps)=>{\r\n    let id= ownProps.match.params.post_id;\r\n    return{\r\n        post: state.posts.find((post)=> post.id = id)\r\n    }\r\n}\r\nexport default Coloring(connect(mapStateToProps)(Post)) ;","import React , {Component} from 'react';\nimport Navbar from './components/navbar.js';\nimport { BrowserRouter as Router ,Route,Switch } from 'react-router-dom'\nimport Home from './components/todolist.js';\nimport About from './components/about.js';\nimport Contact from './components/contact.js';\nimport Updates from './components/updates.js';\nimport Post from './components/post.js';\nclass App extends Component{\n \n  render() {\n    return (\n      <Router>\n        <div className=\"todo-app container\">\n          <Navbar/>\n            <Switch>\n              <Route  path='/' exact component={Home} /> \n              <Route  path='/about.js' exact component={About} /> \n              <Route  path='/contact.js'  component={Contact} /> \n              <Route  path='/updates.js'  component={Updates} /> \n              <Route path='/:post_id' component={Post}/>\n            </Switch>\n        </div>\n      </Router>\n      \n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState ={\r\n    posts:[\r\n        {\r\n        \"id\": 1,\"title\": \"accusamus beatae ad facilis cum similique qui sunt\",\r\n        \"body\": \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\r\n        },\r\n        {\r\n        \"id\": 2,\"title\": \"accusamus beatae ad facilis cum similique qui sunt\",\r\n        \"body\": \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\r\n        },\r\n        {\r\n        \"id\": 3,\"title\": \"accusamus beatae ad facilis cum similique qui sunt\",\r\n        \"body\": \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\r\n        },\r\n        {\r\n        \"id\": 4,\"title\": \"accusamus beatae ad facilis cum similique qui sunt\",\r\n        \"body\": \"quia et suscipit suscipit recusandae consequuntur expedita et cum reprehenderit molestiae ut ut quas totam nostrum rerum est autem sunt rem eveniet architecto\"\r\n        }\r\n    ]\r\n}\r\nconst rootRedducer = (state=initState,action)=>{\r\n    return state;\r\n}\r\nexport default rootRedducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore}from 'redux';\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducer/rootreducer';\n\nconst store= createStore(rootReducer);\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}